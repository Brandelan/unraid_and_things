#!/bin/bash
scriptstart=$(date +'%s')
LOGFILE="/boot/logs/Daily-Log.txt"

#Only run these parts of the script if it's 4AM  (personal preference)

currentHour=$(date "+%H")
#if (( currentHour == 4 )); then
     docker restart binhex-qbittorrentvpn
     echo "$(date "+%m-%d-%Y %T") : Restarted Qbittorrent" >> $LOGFILE 2>%1
     
     docker restart radarr
     echo "$(date "+%m-%d-%Y %T") : Restarted radarr" >> $LOGFILE 2>%1

     docker restart radarr-4k
     echo "$(date "+%m-%d-%Y %T") : Restarted radarr-4k" >> $LOGFILE 2>%1

     docker restart sonarr
     echo "$(date "+%m-%d-%Y %T") : Restarted sonarr" >> $LOGFILE 2>%1

     docker restart jackett
     echo "$(date "+%m-%d-%Y %T") : Restarted jackett" >> $LOGFILE 2>%1

    #Delete danging docker images
    docker image prune -f
    echo "$(date "+%m-%d-%Y %T") : Cleaned up dangling docker images" >> $LOGFILE 2>%1

    #Delete DS Store file types after 7 days, uses a dstore.txt to keep track on every run.
    #read dsStoreRun < /tmp/dstore.txt
    #if ((dsStoreRun == 7)); then
     #    find /mnt/user -maxdepth 9999 -noleaf -type f -name ".DS_Store" -exec rm "{}" \;
      #   echo "$(date "+%m-%d-%Y %T") : Deleted .DS_Store Files" >> $LOGFILE 2>%1
       #  dsStoreRun=0
    #else
     #    dsStoreRun=$((dsStoreRun + 1))
    #fi
    #echo $dsStoreRun > /tmp/dstore.txt


#Create/Cleanup Media lists for data recovery reasons

#Movies
find "/mnt/user/plex_media/Movies" -maxdepth 1 -type d -printf '%f\n' > "/boot/logs/treeLists/Movies $(date +\%Y-\%m-\%d-\%H-\%M).txt"

echo "$(date "+%m-%d-%Y %T") : Created Movies List" >> $LOGFILE 2>%1

#4K Movies
find "/mnt/user/plex_media/UHD" -maxdepth 1 -type d -printf '%f\n' > "/boot/logs/treeLists/UHD $(date +\%Y-\%m-\%d-\%H-\%M).txt"
echo "$(date "+%m-%d-%Y %T") : Created UHD List" >> $LOGFILE 2>%1

#Comedy
find "/mnt/user/plex_media/Comedy" -maxdepth 1 -type d -printf '%f\n' > "/boot/logs/treeLists/Comedy $(date +\%Y-\%m-\%d-\%H-\%M).txt"
echo "$(date "+%m-%d-%Y %T") : Created Comedy List" >> $LOGFILE 2>%1

#Documentaries
find "/mnt/user/plex_media/Documentary" -maxdepth 1 -type d -printf '%f\n' > "/boot/logs/treeLists/docs $(date +\%Y-\%m-\%d-\%H-\%M).txt"
echo "$(date "+%m-%d-%Y %T") : Created Docs List" >> $LOGFILE 2>%1

#Kids
find "/mnt/user/plex_media/Kids" -maxdepth 1 -type d -printf '%f\n' > "/boot/logs/treeLists/Kids $(date +\%Y-\%m-\%d-\%H-\%M).txt"
echo "$(date "+%m-%d-%Y %T") : Created Kids List" >> $LOGFILE 2>%1

#Masterclass
find "/mnt/user/plex_media/MasterClass" -maxdepth 1 -type d -printf '%f\n' > "/boot/logs/treeLists/Masterclass $(date +\%Y-\%m-\%d-\%H-\%M).txt"
echo "$(date "+%m-%d-%Y %T") : Created Masterclass List" >> $LOGFILE 2>%1

#Anime
find "/mnt/user/plex_media/anime_movies" -maxdepth 1 -type d -printf '%f\n' > "/boot/logs/treeLists/anime $(date +\%Y-\%m-\%d-\%H-\%M).txt"
echo "$(date "+%m-%d-%Y %T") : Created anime List" >> $LOGFILE 2>%1

#TVSeries
find "/mnt/user/plex_media/TV Shows" -maxdepth 1 -type d -printf '%f\n' > "/boot/logs/treeLists/TV Shows $(date +\%Y-\%m-\%d-\%H-\%M).txt"
echo "$(date "+%m-%d-%Y %T") : Created TV Series List" >> $LOGFILE 2>%1

#anime_tv
find "/mnt/user/plex_media/animeTV" -maxdepth 1 -type d -printf '%f\n' > "/boot/logs/treeLists/animeTV $(date +\%Y-\%m-\%d-\%H-\%M).txt"
echo "$(date "+%m-%d-%Y %T") : Created AnimeTV  List" >> $LOGFILE 2>%1

#mma-tv
find "/mnt/user/plex_media/mma-tv" -maxdepth 1 -type d -printf '%f\n' > "/boot/logs/treeLists/mma $(date +\%Y-\%m-\%d-\%H-\%M).txt"
echo "$(date "+%m-%d-%Y %T") : Created mmaTV List" >> $LOGFILE 2>%1

#Remove old Media lists
find /boot/logs/treeLists/ -mtime +2  -delete
echo "$(date "+%m-%d-%Y %T") : Cleaned up treeLists Folder (2 Days)" >> $LOGFILE 2>%1

#Display size of docker logs for runaway logging
du -ah /var/lib/docker/containers/ | grep -v "/$" | sort -rh | head -60 | grep .log
echo "$(date "+%m-%d-%Y %T") : Checked docker logs for runaway logging" >> $LOGFILE 2>%1

#Check Qbittorrent IP
IP="$(docker exec binhex-qbittorrentvpn curl -s bot.whatismyipaddress.com)"
echo "$(date "+%m-%d-%Y %T") :  Qbittorrent IP is $IP" >> $LOGFILE 2>%1

#Check current unRAID WAN IP
IP2="$(curl -s bot.whatismyipaddress.com)"
echo "$(date "+%m-%d-%Y %T") : unRAID WAN IP is $IP2" >> $LOGFILE 2>%1

#Final part of this script/calculates run time
echo "$(date "+%m-%d-%Y %T") : Completed daily tasks in $(($(date +'%s') - $scriptstart)) SECONDS" | tee -a >> $LOGFILE 2>%1  
